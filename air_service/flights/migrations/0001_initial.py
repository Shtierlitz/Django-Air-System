# Generated by Django 4.1.7 on 2023-05-05 16:19

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='User name')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email_verify', models.BooleanField(default=False)),
                ('phone', models.CharField(default='+380666666666', max_length=13, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('X', 'X')], default='X', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=255, null=True, unique=True)),
                ('aircraft_type', models.CharField(choices=[('Boeing', 'Boeing'), ('Airbus', 'Airbus'), ('Embraer', 'Embraer'), ('Cessna', 'Cessna')], default='Boeing', max_length=255, null=True)),
                ('total_seats', models.IntegerField(null=True)),
            ],
            options={
                'permissions': [('can_manage_aircraft', 'Can manage aircraft')],
            },
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, unique=True)),
                ('code', models.CharField(max_length=3, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('country', models.CharField(max_length=2, null=True)),
            ],
            options={
                'permissions': [('can_manage_airports', 'Can manage airports')],
            },
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Test', max_length=255)),
                ('departure_time', models.DateTimeField(null=True)),
                ('arrival_time', models.DateTimeField(null=True)),
                ('economy_seats', models.IntegerField(null=True)),
                ('business_seats', models.IntegerField(null=True)),
                ('first_class_seats', models.IntegerField(null=True)),
                ('expire', models.TextField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired')], default='ACTIVE')),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('aircraft', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='flights.aircraft')),
                ('destination_airport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dest_airport', to='flights.airport')),
                ('origin_airport', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orig_airport', to='flights.airport')),
            ],
            options={
                'permissions': [('can_manage_flights', 'Can manage flights')],
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_letter', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1, null=True)),
                ('seat_number', models.IntegerField(null=True)),
                ('seat_type', models.CharField(choices=[('Economy', 'Economy'), ('Business', 'Business'), ('First', 'First')], default='Economy', max_length=50)),
            ],
            options={
                'permissions': [('can_manage_seats', 'Can manage seats')],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, null=True, unique=True)),
                ('status', models.TextField(choices=[('PAID', 'Paid'), ('UNPAID', 'Unpaid')], default='UNPAID')),
                ('price', models.FloatField(default=100.0)),
                ('booking_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('check_in', models.TextField(choices=[('APPROVED', 'Approved'), ('NOT APPROVED', 'Not Approved')], default='NOT APPROVED')),
                ('onboard', models.TextField(choices=[('APPROVED', 'Approved'), ('NOT APPROVED', 'Not Approved')], default='NOT APPROVED')),
                ('expire', models.TextField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired')], default='ACTIVE')),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('flight', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='flights.flight')),
                ('seat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='flights.seat')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_approve_check_in', 'Can approve check-in'), ('can_approve_onboard', 'Can approve onboard')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.CharField(default='0', max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('cardholder_name', models.CharField(max_length=255, null=True)),
                ('ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='flights.ticket')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='flight',
            name='seats',
            field=models.ManyToManyField(related_name='flights_seats', to='flights.seat'),
        ),
        migrations.AddField(
            model_name='flight',
            name='users',
            field=models.ManyToManyField(related_name='users_flights', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('available', models.BooleanField(default=True)),
                ('price', models.FloatField(default=10, max_length=50)),
                ('tickets', models.ManyToManyField(related_name='tickets_extras', to='flights.ticket')),
            ],
            options={
                'permissions': [('can_manage_extras', 'Can manage extras')],
            },
        ),
    ]
